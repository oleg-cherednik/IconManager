package ru.olegcherednik.icoman.icns;

import lombok.AccessLevel;
import lombok.NoArgsConstructor;

import static ru.olegcherednik.icoman.imageio.bmp.Bitmap.rgb;

/**
 * @author Oleg Cherednik
 * @since 31.08.2015
 */
@NoArgsConstructor(access = AccessLevel.PRIVATE)
final class ColorTable {
    public static int[] get(int bitsPerPixel) {
        if (bitsPerPixel == 1)
            return BIT1;
        if (bitsPerPixel == 4)
            return BIT4;
        if (bitsPerPixel == 8)
            return BIT8;
        return null;
    }

    private static final int[] BIT1 = {
            rgb(0xFF, 0xFF, 0xFF),
            rgb(0x00, 0x00, 0x00)
    };

    private static final int[] BIT4 = {
            rgb(0xFF, 0xFF, 0xFF),
            rgb(0xFF, 0xF3, 0x05),
            rgb(0xFF, 0x64, 0x02),
            rgb(0xDD, 0x08, 0x06),
            rgb(0xF2, 0x08, 0x84),
            rgb(0x46, 0x00, 0xA5),
            rgb(0x00, 0x00, 0xD4),
            rgb(0x02, 0xAB, 0xEA),
            rgb(0x1F, 0xB7, 0x14),
            rgb(0x00, 0x64, 0x11),
            rgb(0x56, 0x2C, 0x05),
            rgb(0x90, 0x71, 0x3A),
            rgb(0xC0, 0xC0, 0xC0),
            rgb(0x80, 0x80, 0x80),
            rgb(0x40, 0x40, 0x40),
            rgb(0x00, 0x00, 0x00)
    };

    private static final int[] BIT8 = {
            rgb(0xFF, 0xFF, 0xFF),
            rgb(0xFF, 0xFF, 0xCC),
            rgb(0xFF, 0xFF, 0x99),
            rgb(0xFF, 0xFF, 0x66),
            rgb(0xFF, 0xFF, 0x33),
            rgb(0xFF, 0xFF, 0x00),
            rgb(0xFF, 0xCC, 0xFF),
            rgb(0xFF, 0xCC, 0xCC),
            rgb(0xFF, 0xCC, 0x99),
            rgb(0xFF, 0xCC, 0x66),
            rgb(0xFF, 0xCC, 0x33),
            rgb(0xFF, 0xCC, 0x00),
            rgb(0xFF, 0x99, 0xFF),
            rgb(0xFF, 0x99, 0xCC),
            rgb(0xFF, 0x99, 0x99),
            rgb(0xFF, 0x99, 0x66),
            rgb(0xFF, 0x99, 0x33),
            rgb(0xFF, 0x99, 0x00),
            rgb(0xFF, 0x66, 0xFF),
            rgb(0xFF, 0x66, 0xCC),
            rgb(0xFF, 0x66, 0x99),
            rgb(0xFF, 0x66, 0x66),
            rgb(0xFF, 0x66, 0x33),
            rgb(0xFF, 0x66, 0x00),
            rgb(0xFF, 0x33, 0xFF),
            rgb(0xFF, 0x33, 0xCC),
            rgb(0xFF, 0x33, 0x99),
            rgb(0xFF, 0x33, 0x66),
            rgb(0xFF, 0x33, 0x33),
            rgb(0xFF, 0x33, 0x00),
            rgb(0xFF, 0x00, 0xFF),
            rgb(0xFF, 0x00, 0xCC),
            rgb(0xFF, 0x00, 0x99),
            rgb(0xFF, 0x00, 0x66),
            rgb(0xFF, 0x00, 0x33),
            rgb(0xFF, 0x00, 0x00),
            rgb(0xCC, 0xFF, 0xFF),
            rgb(0xCC, 0xFF, 0xCC),
            rgb(0xCC, 0xFF, 0x99),
            rgb(0xCC, 0xFF, 0x66),
            rgb(0xCC, 0xFF, 0x33),
            rgb(0xCC, 0xFF, 0x00),
            rgb(0xCC, 0xCC, 0xFF),
            rgb(0xCC, 0xCC, 0xCC),
            rgb(0xCC, 0xCC, 0x99),
            rgb(0xCC, 0xCC, 0x66),
            rgb(0xCC, 0xCC, 0x33),
            rgb(0xCC, 0xCC, 0x00),
            rgb(0xCC, 0x99, 0xFF),
            rgb(0xCC, 0x99, 0xCC),
            rgb(0xCC, 0x99, 0x99),
            rgb(0xCC, 0x99, 0x66),
            rgb(0xCC, 0x99, 0x33),
            rgb(0xCC, 0x99, 0x00),
            rgb(0xCC, 0x66, 0xFF),
            rgb(0xCC, 0x66, 0xCC),
            rgb(0xCC, 0x66, 0x99),
            rgb(0xCC, 0x66, 0x66),
            rgb(0xCC, 0x66, 0x33),
            rgb(0xCC, 0x66, 0x00),
            rgb(0xCC, 0x33, 0xFF),
            rgb(0xCC, 0x33, 0xCC),
            rgb(0xCC, 0x33, 0x99),
            rgb(0xCC, 0x33, 0x66),
            rgb(0xCC, 0x33, 0x33),
            rgb(0xCC, 0x33, 0x00),
            rgb(0xCC, 0x00, 0xFF),
            rgb(0xCC, 0x00, 0xCC),
            rgb(0xCC, 0x00, 0x99),
            rgb(0xCC, 0x00, 0x66),
            rgb(0xCC, 0x00, 0x33),
            rgb(0xCC, 0x00, 0x00),
            rgb(0x99, 0xFF, 0xFF),
            rgb(0x99, 0xFF, 0xCC),
            rgb(0x99, 0xFF, 0x99),
            rgb(0x99, 0xFF, 0x66),
            rgb(0x99, 0xFF, 0x33),
            rgb(0x99, 0xFF, 0x00),
            rgb(0x99, 0xCC, 0xFF),
            rgb(0x99, 0xCC, 0xCC),
            rgb(0x99, 0xCC, 0x99),
            rgb(0x99, 0xCC, 0x66),
            rgb(0x99, 0xCC, 0x33),
            rgb(0x99, 0xCC, 0x00),
            rgb(0x99, 0x99, 0xFF),
            rgb(0x99, 0x99, 0xCC),
            rgb(0x99, 0x99, 0x99),
            rgb(0x99, 0x99, 0x66),
            rgb(0x99, 0x99, 0x33),
            rgb(0x99, 0x99, 0x00),
            rgb(0x99, 0x66, 0xFF),
            rgb(0x99, 0x66, 0xCC),
            rgb(0x99, 0x66, 0x99),
            rgb(0x99, 0x66, 0x66),
            rgb(0x99, 0x66, 0x33),
            rgb(0x99, 0x66, 0x00),
            rgb(0x99, 0x33, 0xFF),
            rgb(0x99, 0x33, 0xCC),
            rgb(0x99, 0x33, 0x99),
            rgb(0x99, 0x33, 0x66),
            rgb(0x99, 0x33, 0x33),
            rgb(0x99, 0x33, 0x00),
            rgb(0x99, 0x00, 0xFF),
            rgb(0x99, 0x00, 0xCC),
            rgb(0x99, 0x00, 0x99),
            rgb(0x99, 0x00, 0x66),
            rgb(0x99, 0x00, 0x33),
            rgb(0x99, 0x00, 0x00),
            rgb(0x66, 0xFF, 0xFF),
            rgb(0x66, 0xFF, 0xCC),
            rgb(0x66, 0xFF, 0x99),
            rgb(0x66, 0xFF, 0x66),
            rgb(0x66, 0xFF, 0x33),
            rgb(0x66, 0xFF, 0x00),
            rgb(0x66, 0xCC, 0xFF),
            rgb(0x66, 0xCC, 0xCC),
            rgb(0x66, 0xCC, 0x99),
            rgb(0x66, 0xCC, 0x66),
            rgb(0x66, 0xCC, 0x33),
            rgb(0x66, 0xCC, 0x00),
            rgb(0x66, 0x99, 0xFF),
            rgb(0x66, 0x99, 0xCC),
            rgb(0x66, 0x99, 0x99),
            rgb(0x66, 0x99, 0x66),
            rgb(0x66, 0x99, 0x33),
            rgb(0x66, 0x99, 0x00),
            rgb(0x66, 0x66, 0xFF),
            rgb(0x66, 0x66, 0xCC),
            rgb(0x66, 0x66, 0x99),
            rgb(0x66, 0x66, 0x66),
            rgb(0x66, 0x66, 0x33),
            rgb(0x66, 0x66, 0x00),
            rgb(0x66, 0x33, 0xFF),
            rgb(0x66, 0x33, 0xCC),
            rgb(0x66, 0x33, 0x99),
            rgb(0x66, 0x33, 0x66),
            rgb(0x66, 0x33, 0x33),
            rgb(0x66, 0x33, 0x00),
            rgb(0x66, 0x00, 0xFF),
            rgb(0x66, 0x00, 0xCC),
            rgb(0x66, 0x00, 0x99),
            rgb(0x66, 0x00, 0x66),
            rgb(0x66, 0x00, 0x33),
            rgb(0x66, 0x00, 0x00),
            rgb(0x33, 0xFF, 0xFF),
            rgb(0x33, 0xFF, 0xCC),
            rgb(0x33, 0xFF, 0x99),
            rgb(0x33, 0xFF, 0x66),
            rgb(0x33, 0xFF, 0x33),
            rgb(0x33, 0xFF, 0x00),
            rgb(0x33, 0xCC, 0xFF),
            rgb(0x33, 0xCC, 0xCC),
            rgb(0x33, 0xCC, 0x99),
            rgb(0x33, 0xCC, 0x66),
            rgb(0x33, 0xCC, 0x33),
            rgb(0x33, 0xCC, 0x00),
            rgb(0x33, 0x99, 0xFF),
            rgb(0x33, 0x99, 0xCC),
            rgb(0x33, 0x99, 0x99),
            rgb(0x33, 0x99, 0x66),
            rgb(0x33, 0x99, 0x33),
            rgb(0x33, 0x99, 0x00),
            rgb(0x33, 0x66, 0xFF),
            rgb(0x33, 0x66, 0xCC),
            rgb(0x33, 0x66, 0x99),
            rgb(0x33, 0x66, 0x66),
            rgb(0x33, 0x66, 0x33),
            rgb(0x33, 0x66, 0x00),
            rgb(0x33, 0x33, 0xFF),
            rgb(0x33, 0x33, 0xCC),
            rgb(0x33, 0x33, 0x99),
            rgb(0x33, 0x33, 0x66),
            rgb(0x33, 0x33, 0x33),
            rgb(0x33, 0x33, 0x00),
            rgb(0x33, 0x00, 0xFF),
            rgb(0x33, 0x00, 0xCC),
            rgb(0x33, 0x00, 0x99),
            rgb(0x33, 0x00, 0x66),
            rgb(0x33, 0x00, 0x33),
            rgb(0x33, 0x00, 0x00),
            rgb(0x00, 0xFF, 0xFF),
            rgb(0x00, 0xFF, 0xCC),
            rgb(0x00, 0xFF, 0x99),
            rgb(0x00, 0xFF, 0x66),
            rgb(0x00, 0xFF, 0x33),
            rgb(0x00, 0xFF, 0x00),
            rgb(0x00, 0xCC, 0xFF),
            rgb(0x00, 0xCC, 0xCC),
            rgb(0x00, 0xCC, 0x99),
            rgb(0x00, 0xCC, 0x66),
            rgb(0x00, 0xCC, 0x33),
            rgb(0x00, 0xCC, 0x00),
            rgb(0x00, 0x99, 0xFF),
            rgb(0x00, 0x99, 0xCC),
            rgb(0x00, 0x99, 0x99),
            rgb(0x00, 0x99, 0x66),
            rgb(0x00, 0x99, 0x33),
            rgb(0x00, 0x99, 0x00),
            rgb(0x00, 0x66, 0xFF),
            rgb(0x00, 0x66, 0xCC),
            rgb(0x00, 0x66, 0x99),
            rgb(0x00, 0x66, 0x66),
            rgb(0x00, 0x66, 0x33),
            rgb(0x00, 0x66, 0x00),
            rgb(0x00, 0x33, 0xFF),
            rgb(0x00, 0x33, 0xCC),
            rgb(0x00, 0x33, 0x99),
            rgb(0x00, 0x33, 0x66),
            rgb(0x00, 0x33, 0x33),
            rgb(0x00, 0x33, 0x00),
            rgb(0x00, 0x00, 0xFF),
            rgb(0x00, 0x00, 0xCC),
            rgb(0x00, 0x00, 0x99),
            rgb(0x00, 0x00, 0x66),
            rgb(0x00, 0x00, 0x33),
            rgb(0xEE, 0x00, 0x00),
            rgb(0xDD, 0x00, 0x00),
            rgb(0xBB, 0x00, 0x00),
            rgb(0xAA, 0x00, 0x00),
            rgb(0x88, 0x00, 0x00),
            rgb(0x77, 0x00, 0x00),
            rgb(0x55, 0x00, 0x00),
            rgb(0x44, 0x00, 0x00),
            rgb(0x22, 0x00, 0x00),
            rgb(0x11, 0x00, 0x00),
            rgb(0x00, 0xEE, 0x00),
            rgb(0x00, 0xDD, 0x00),
            rgb(0x00, 0xBB, 0x00),
            rgb(0x00, 0xAA, 0x00),
            rgb(0x00, 0x88, 0x00),
            rgb(0x00, 0x77, 0x00),
            rgb(0x00, 0x55, 0x00),
            rgb(0x00, 0x44, 0x00),
            rgb(0x00, 0x22, 0x00),
            rgb(0x00, 0x11, 0x00),
            rgb(0x00, 0x00, 0xEE),
            rgb(0x00, 0x00, 0xDD),
            rgb(0x00, 0x00, 0xBB),
            rgb(0x00, 0x00, 0xAA),
            rgb(0x00, 0x00, 0x88),
            rgb(0x00, 0x00, 0x77),
            rgb(0x00, 0x00, 0x55),
            rgb(0x00, 0x00, 0x44),
            rgb(0x00, 0x00, 0x22),
            rgb(0x00, 0x00, 0x11),
            rgb(0xEE, 0xEE, 0xEE),
            rgb(0xDD, 0xDD, 0xDD),
            rgb(0xBB, 0xBB, 0xBB),
            rgb(0xAA, 0xAA, 0xAA),
            rgb(0x88, 0x88, 0x88),
            rgb(0x77, 0x77, 0x77),
            rgb(0x55, 0x55, 0x55),
            rgb(0x44, 0x44, 0x44),
            rgb(0x22, 0x22, 0x22),
            rgb(0x11, 0x11, 0x11),
            rgb(0x00, 0x00, 0x00)
    };
}
